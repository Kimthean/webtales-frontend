---
import Hr from "./Hr.astro";
import Pagination from "./Pagination.astro";
import { API_URL } from "../constants/index";

const { id } = Astro.params;

const page = parseInt(Astro.url.searchParams.get("page") || "1");
const pageSize = 50;

const getChapters = async (
  id: string | undefined,
  page: number,
  pageSize: number
) => {
  const res = await fetch(
    `${API_URL}/novels/${id}/chapters/?page=${page}&pageSize=${pageSize}`
  );
  if (!res.ok) {
    return [];
  }
  return await res.json();
};

const { chapters, totalPages } = await getChapters(id, page, pageSize);

const prevUrl = page > 1 ? `?page=${page - 1}` : "";
const nextUrl = page < totalPages ? `?page=${page + 1}` : "";
---

<div class="rounded-lg bg-skin-card p-4 shadow-md sm:p-6">
  <h2 class="mb-4 text-xl font-semibold text-skin-base sm:text-2xl">
    Chapters
  </h2>
  <Pagination
    currentPage={page}
    totalPages={totalPages}
    prevUrl={prevUrl}
    nextUrl={nextUrl}
  />
  <div class="h-[500px] overflow-y-auto sm:h-[600px]">
    <ul class="space-y-2">
      {
        chapters.map(
          (chapter: { translated_title: string; Number: string }) => (
            <li class="w-full">
              <a
                href={`/novel/${id}/chapter/${chapter.Number}/`}
                class="block rounded-md p-1 py-2 transition duration-150 ease-in-out hover:bg-skin-accent sm:p-3"
              >
                <span class="text-sm text-skin-base opacity-80 sm:text-base">
                  {chapter.translated_title}
                </span>
              </a>
              <div class="pt-2 sm:px-3">
                <Hr noPadding={true} />
              </div>
            </li>
          )
        )
      }
    </ul>
  </div>
</div>

<style>
  .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }

  .overflow-y-auto::-webkit-scrollbar-track {
    background: var(--color-fill);
  }

  .overflow-y-auto::-webkit-scrollbar-thumb {
    background-color: var(--color-accent);
    border-radius: 20px;
  }
</style>
