---
import { Icon } from "astro-icon/components";

const novels = Array.isArray(Astro.props.novels) ? Astro.props.novels : [];
---

<div class="mx-auto grid w-full max-w-3xl grid-cols-1 gap-6">
  {
    novels.map(novel => (
      <a
        href={`/novel/${novel.ID}/`}
        class="relative block overflow-hidden rounded-xl bg-skin-card shadow-lg transition-all duration-300 hover:shadow-[rgba(0,_0,_0,_0.4)_0px_30px_90px]"
      >
        <div class="flex flex-col sm:flex-row">
          {novel.thumbnail && (
            <img
              class="h-48 w-full min-w-48 object-contain sm:h-auto sm:w-48"
              src={novel.thumbnail}
              alt={novel.title}
            />
          )}
          <div class="flex flex-grow flex-col justify-between p-4">
            <div class="flex-grow">
              <h2 class="mb-2 font-bold text-skin-base sm:text-xl">
                {novel.title.replace(/\b\w/g, (char: string) =>
                  char.toUpperCase()
                )}
              </h2>
              <div class="relative">
                <p class="line-clamp-3 text-sm text-skin-base sm:line-clamp-4">
                  {novel.description}
                </p>
              </div>
            </div>
            {novel.translation_status === "in_progress" ? (
              <p class="text-xs max-sm:pt-4">Translation Status: In Progress</p>
            ) : null}
            <p class="items-center text-xs text-skin-base opacity-80 max-sm:pt-4 sm:pb-2">
              <Icon name="book" class="size-5" /> {novel.total_chapters_count}{" "}
              Chapters
            </p>
            <p class="text-sm text-skin-base opacity-80 sm:mt-auto">
              Author:{" "}
              {novel.author
                .replace(/[_-]/g, " ")
                .split(" ")
                .map(
                  (word: string) => word.charAt(0).toUpperCase() + word.slice(1)
                )
                .join(" ")}
            </p>
          </div>
        </div>
      </a>
    ))
  }
</div>
