---
import LinkButton from "./LinkButton.astro";

interface Props {
  currentPage: number;
  totalPages: number;
  prevUrl: string;
  nextUrl: string;
}

const { currentPage, totalPages, prevUrl, nextUrl } = Astro.props;

const prev: string = currentPage > 1 ? "" : "disabled";
const next: string = currentPage < totalPages ? "" : "disabled";
const isPrevDisabled: boolean = prev === "disabled";
const isNextDisabled: boolean = next === "disabled";

const getPageNumbers = (): (number | string)[] => {
  const pageNumbers: (number | string)[] = [];
  const showPages: number = 4;
  const halfShowPages: number = Math.floor(showPages / 2);

  let startPage: number = Math.max(1, currentPage - halfShowPages);
  let endPage: number = Math.min(totalPages, startPage + showPages - 1);

  if (endPage - startPage < showPages - 1) {
    startPage = Math.max(1, endPage - showPages + 1);
  }

  for (let i: number = startPage; i <= endPage; i++) {
    pageNumbers.push(i);
  }

  if (endPage < totalPages - 1) {
    pageNumbers.push("...");
    pageNumbers.push(totalPages);
  } else if (endPage === totalPages - 1) {
    pageNumbers.push(totalPages);
  }

  return pageNumbers;
};

const pageNumbers: (number | string)[] = getPageNumbers();

const getPageUrl = (pageNum: number | string): string => {
  if (typeof pageNum === "number") {
    const url = new URL(Astro.request.url);
    url.searchParams.set("page", pageNum.toString());
    return url.pathname + url.search;
  }
  return "#";
};
---

{
  totalPages > 1 && (
    <nav class="pagination-wrapper" aria-label="Pagination">
      <LinkButton
        disabled={isPrevDisabled}
        href={prevUrl}
        className={`mr-4 flex select-none items-center justify-center ${prev}`}
        ariaLabel="Previous"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class:list={[{ "disabled-svg": isPrevDisabled }]}
        >
          <path d="M12.707 17.293 8.414 13H18v-2H8.414l4.293-4.293-1.414-1.414L4.586 12l6.707 6.707z" />
        </svg>
        Prev
      </LinkButton>
      <p class="sm:hidden">
        {currentPage} / {totalPages}
      </p>
      <div class="page-numbers">
        {pageNumbers.map((pageNum, index) =>
          pageNum === "..." ? (
            <span class="page-ellipsis">...</span>
          ) : (
            <a
              href={getPageUrl(pageNum)}
              class={`page-number ${currentPage === pageNum ? "current" : ""}`}
            >
              {pageNum}
            </a>
          )
        )}
      </div>
      <LinkButton
        disabled={isNextDisabled}
        href={nextUrl}
        className={`ml-4 flex select-none items-center justify-center ${next}`}
        ariaLabel="Next"
      >
        Next
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class:list={[{ "disabled-svg": isNextDisabled }]}
        >
          <path d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z" />
        </svg>
      </LinkButton>
    </nav>
  )
}

<style>
  .pagination-wrapper {
    @apply mb-8 mt-auto flex items-center justify-center;
  }
  .disabled {
    @apply pointer-events-none select-none opacity-50 hover:text-skin-base group-hover:fill-skin-base;
  }
  .disabled-svg {
    @apply group-hover:!fill-skin-base;
  }
  .page-numbers {
    @apply flex space-x-2;
  }
  .page-number {
    @apply rounded px-3 py-1;
  }
  .page-number.current {
    @apply bg-skin-accent text-skin-inverted;
  }
  .page-ellipsis {
    @apply px-2 py-1;
  }
  @media (max-width: 640px) {
    .page-numbers {
      @apply hidden;
    }
  }
</style>
