---
import LinkButton from "./LinkButton.astro";

interface Props {
  currentPage: number;
  totalPages: number;
  prevUrl: string;
  nextUrl: string;
}

const { currentPage, totalPages, prevUrl, nextUrl } = Astro.props;

const prev: string = currentPage > 1 ? "" : "disabled";
const next: string = currentPage < totalPages ? "" : "disabled";
const isPrevDisabled: boolean = prev === "disabled";
const isNextDisabled: boolean = next === "disabled";

const getPageNumbers = (): (number | string)[] => {
  const pageNumbers: (number | string)[] = [];
  const showPages: number = 4;
  const halfShowPages: number = Math.floor(showPages / 2);

  let startPage: number = Math.max(1, currentPage - halfShowPages);
  let endPage: number = Math.min(totalPages, startPage + showPages - 1);

  if (endPage - startPage < showPages - 1) {
    startPage = Math.max(1, endPage - showPages + 1);
  }

  for (let i: number = startPage; i <= endPage; i++) {
    pageNumbers.push(i);
  }

  if (endPage < totalPages - 1) {
    pageNumbers.push("...");
    pageNumbers.push(totalPages);
  } else if (endPage === totalPages - 1) {
    pageNumbers.push(totalPages);
  }

  return pageNumbers;
};

const pageNumbers: (number | string)[] = getPageNumbers();

const getPageUrl = (pageNum: number | string): string => {
  if (typeof pageNum === "number") {
    const url = new URL(Astro.request.url);
    url.searchParams.set("page", pageNum.toString());
    return url.pathname + url.search;
  }
  return "#";
};
---

{
  totalPages > 1 && (
    <nav
      class="mb-8 mt-auto flex flex-wrap items-center justify-center"
      aria-label="Pagination"
    >
      <LinkButton
        disabled={isPrevDisabled}
        href={prevUrl}
        className={`flex items-center justify-center ${isPrevDisabled ? "pointer-events-none opacity-50" : ""}`}
        ariaLabel="Previous"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class={`h-6 w-6 ${isPrevDisabled ? "text-gray-400" : "text-current"}`}
          viewBox="0 0 24 24"
          fill="currentColor"
        >
          <path d="M12.707 17.293 8.414 13H18v-2H8.414l4.293-4.293-1.414-1.414L4.586 12l6.707 6.707z" />
        </svg>
        <span class="ml-1 hidden sm:inline">Prev</span>
      </LinkButton>
      <div class="mx-2 my-2 flex flex-wrap justify-center space-x-2">
        {pageNumbers.map((pageNum, index) =>
          pageNum === "..." ? (
            <span class="px-2 py-1 text-base">...</span>
          ) : (
            <a
              href={getPageUrl(pageNum)}
              class={`rounded px-3 py-1 text-base ${currentPage === pageNum ? "bg-skin-accent text-skin-inverted" : ""}`}
            >
              {pageNum}
            </a>
          )
        )}
      </div>
      <LinkButton
        disabled={isNextDisabled}
        href={nextUrl}
        className={`flex items-center justify-center ${isNextDisabled ? "pointer-events-none opacity-50" : ""}`}
        ariaLabel="Next"
      >
        <span class="mr-1 hidden sm:inline">Next</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class={`h-6 w-6 ${isNextDisabled ? "text-gray-400" : "text-current"}`}
          viewBox="0 0 24 24"
          fill="currentColor"
        >
          <path d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z" />
        </svg>
      </LinkButton>
    </nav>
  )
}
