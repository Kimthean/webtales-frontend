---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import ChapterModal from "@/components/react/ChapterModal";
import SettingsPanel from "@/components/react/SettingsPanel";

interface Props {
  chapter_title: string;
  novel_name: string;
}

const { novelSlug } = Astro.params;

const { chapter_title, novel_name } = Astro.props;
---

<Layout title={novel_name + " | " + chapter_title}>
  <Header activeNav="novels" />
  <div
    id="progress-container"
    class="progress-container fixed left-0 top-0 z-10 h-1 w-full bg-skin-fill"
  >
    <div class="progress-bar h-1 w-0 bg-skin-accent" id="myBar"></div>
  </div>

  <main class="mx-auto w-full max-w-5xl px-4 pb-8">
    <slot />
  </main>
  <div
    class="z-9999 fixed bottom-16 right-4 flex flex-col space-y-2 sm:bottom-32"
  >
    <div class="my-1">
      <SettingsPanel client:only="react" />
    </div>
    <div>
      <ChapterModal novelSlug={novelSlug!} client:only="react" />
    </div>
  </div>
</Layout>

<script is:inline>
  function updateScrollProgress() {
    const winScroll =
      document.body.scrollTop || document.documentElement.scrollTop;
    const height =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    const scrolled = (winScroll / height) * 100;
    const myBar = document.getElementById("myBar");
    if (myBar && typeof myBar.style.width === "string") {
      myBar.style.width = scrolled + "%";
    }
  }

  document.addEventListener("astro:after-swap", () => {
    updateScrollProgress();
  });

  document.addEventListener("scroll", () => {
    updateScrollProgress();
  });
</script>
