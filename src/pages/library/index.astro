---
import Header from "@/components/Header.astro";
import NovelCard from "@/components/NovelCard.astro";
import Layout from "@/layouts/Layout.astro";
import Main from "@/layouts/Main.astro";
import Pagination from "@/components/Pagination.astro";
import { API_URL } from "@/constants/index";
import type { Novel } from "@/types/novel";
import DiscordAd from "@/components/DiscordAd.astro";

const currentPage = parseInt(Astro.url.searchParams.get("page") || "1");
const limit = 15;

async function fetchNovels(page: number, limit: number) {
  const response = await fetch(`${API_URL}/novel?page=${page}&limit=${limit}`);
  return response.json();
}

const { novels, totalPages } = await fetchNovels(currentPage, limit);

const prevUrl = currentPage > 1 ? `?page=${currentPage - 1}` : "";
const nextUrl = currentPage < totalPages ? `?page=${currentPage + 1}` : "";
---

<Layout>
  <Header activeNav="library" />
  <Main>
    <DiscordAd />
    <div class="flex flex-col py-8">
      <h2 class="pb-8 text-xl font-bold">All Novels</h2>
      <div class="mx-auto grid w-full max-w-3xl grid-cols-1 gap-6">
        {
          novels.map((novel: Novel) => (
            <NovelCard novel={novel} isLatestUpdate={false} />
          ))
        }
      </div>
    </div>

    <Pagination
      currentPage={currentPage}
      totalPages={totalPages}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
    />
  </Main>
</Layout>
