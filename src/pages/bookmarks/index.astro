---
import Header from "@/components/Header.astro";
import NovelCard from "@/components/NovelCard.astro";
import Pagination from "@/components/Pagination.astro";
import Layout from "@/layouts/Layout.astro";
import axiosInstance from "@/lib/axios";
import { getSession } from "auth-astro/server";

const currentPage = parseInt(Astro.url.searchParams.get("page") || "1");
const limit = 15;

const session = await getSession(Astro.request);

let bookmarks = [];
let totalPages = 0;

if (session) {
  async function getBookmark(page: number, limit: number) {
    try {
      const res = await axiosInstance.get(
        `/user/bookmarks?page=${page}&limit=${limit}`,
        {
          headers: {
            Authorization: `Bearer ${session?.user?.access_token}`,
          },
        }
      );
      return res.data;
    } catch (error) {
      return { bookmarks: [], totalPages: 0 };
    }
  }

  const result = await getBookmark(currentPage, limit);
  bookmarks = result.bookmarks;
  totalPages = result.totalPages;
}
const prevUrl = currentPage > 1 ? `?page=${currentPage - 1}` : "";
const nextUrl = currentPage < totalPages ? `?page=${currentPage + 1}` : "";
---

<Layout title="Bookmarks">
  <Header />
  <div class="px-3 pt-8">
    <span class="text-xl font-semibold sm:text-3xl">Bookmarks</span>
    {
      session ? (
        <div class="flex flex-col py-4">
          {bookmarks != null ? (
            bookmarks.map((bookmark: unknown) => (
              <div class="mx-auto grid w-full max-w-3xl grid-cols-1 gap-6 pb-6">
                <NovelCard novel={bookmark} isLatestUpdate={false} />
              </div>
            ))
          ) : (
            <div class="text-center text-lg font-semibold">
              No bookmarks found
            </div>
          )}
        </div>
      ) : (
        <div
          class="my-6 border-l-4 border-yellow-500 bg-yellow-100 p-4 text-yellow-700"
          role="alert"
        >
          <p class="font-bold">
            You need to be logged in to view your reading Bookmarks.
          </p>
          <p>
            Please
            <a href="/auth/sign-in" class="underline">
              sign in
            </a>
            to access this feature.
          </p>
        </div>
      )
    }
  </div>
  {
    session && totalPages > 1 && (
      <Pagination
        currentPage={currentPage}
        totalPages={totalPages}
        prevUrl={prevUrl}
        nextUrl={nextUrl}
      />
    )
  }
</Layout>
