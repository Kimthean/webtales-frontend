---
import Header from "@/components/Header.astro";
import NovelCard from "@/components/NovelCard.astro";
import Layout from "@/layouts/Layout.astro";
import Main from "@/layouts/Main.astro";
import { API_URL } from "@/constants/index";
import DiscordAd from "@/components/DiscordAd.astro";
import LinkButton from "@/components/LinkButton.astro";

async function fetchLatestNovels() {
  const latestAddedResponse = await fetch(`${API_URL}/novel/latest`);
  const latestUpdatedResponse = await fetch(`${API_URL}/novel/latest-update`);

  const latestAdded = await latestAddedResponse.json();
  const latestUpdated = await latestUpdatedResponse.json();

  return { latestAdded, latestUpdated };
}

const { latestAdded, latestUpdated } = await fetchLatestNovels();
---

<Layout>
  <Header activeNav="home" />
  <Main>
    <DiscordAd />
    <div class="flex flex-col py-4">
      <div class="flex items-center pb-4">
        <h2 class="text-lg font-bold sm:text-xl">Latest Added Novel</h2>
        <LinkButton href="/library" className="ml-auto flex items-center">
          Browser Library <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
          >
            <path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
      <div class="mx-auto grid w-full max-w-3xl grid-cols-1 gap-6">
        {
          latestAdded.map((novel: any) => (
            <NovelCard novel={novel} isLatestUpdate={false} />
          ))
        }
      </div>
    </div>

    <div class="flex flex-col py-4">
      <div class="flex items-center pb-4">
        <h2 class="text-lg font-bold sm:text-xl">Latest Updated Novel</h2>
        <LinkButton href="/library" className="ml-auto flex items-center">
          Browser Library <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
          >
            <path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
      <div class="mx-auto grid w-full max-w-3xl grid-cols-1 gap-6">
        {
          latestUpdated.map((novel: any) => (
            <NovelCard novel={novel} isLatestUpdate={true} />
          ))
        }
      </div>
    </div>
  </Main>
</Layout>
